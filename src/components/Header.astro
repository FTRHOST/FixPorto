---
import Navigation from '../components/Navigation.astro'
import { SkipLink } from 'accessible-astro-components'
import { Icon } from 'astro-icon/components'
import { defaultSiteConfig } from '../config/site'

// Get current config
const configPath = 'src/config/site.json'
let currentConfig = defaultSiteConfig

try {
  const config = await import('../config/site.json')
  currentConfig = { ...defaultSiteConfig, ...config.default }
} catch (error) {
  // Use default config if file doesn't exist
}
---

<header>
  <SkipLink />
  <Navigation>
    <li class="menu-item">
      <a href="/">Home</a>
    </li>
    <!-- <li class="menu-item">
      <a href="/blog/">Blog</a>
    </li> -->
    <li class="menu-item">
      <a href="/portfolio/">Project</a>
    </li>
    <!-- <li class="menu-item has-dropdown">
      <button aria-haspopup="true" aria-expanded="false">Example Pages</button>
      <ul class="dropdown-menu">
        <li class="submenu-item">
          <a href="/mdx-page/">MDX Page</a>
        </li>
        <li class="submenu-item">
          <a href="/markdown-page/">Markdown Page</a>
        </li>
        <li class="submenu-item">
          <a href="/accessible-components">Accessible Components</a>
        </li>
      </ul>
    </li> -->
    <li class="menu-item type-icon">
      <a href="https://g.dev/fathiralfaruq" title="Go to the Google Developer">
        <Icon name="mdi:google" />
      </a>
    </li>
    <li class="menu-item type-icon">
      <a href={currentConfig.github} title="Go to the GitHub page">
        <Icon name="ion:logo-github" />
      </a>
    </li>
    <li class="menu-item type-icon">
      <a href={currentConfig.linkedin} title="Go to the LinkedIn page">
        <Icon name="mdi:linkedin" />
      </a>
    </li>
  </Navigation>
</header>

<style lang="scss" is:global>
  @use '../assets/scss/base/outline' as *;

  header {
    .type-icon a {
      display: block;

      [data-icon] {
        margin-top: -4px;
        width: 30px;
        height: auto;

        path {
          fill: var(--action-color);
        }
      }

      &:hover {
        [data-icon] path {
          fill: var(--action-color-state);
        }
      }
    }
  }
</style>
